#!/usr/bin/env python

import sys
import time
import requests

"""
The Legacy Slack Token for a workspace from
https://api.slack.com/custom-integrations/legacy-tokens """
TOKEN = ""

"""
How many before now to delete messages from. For example, 365 deletes all files
older than 1 year.  """
DAYS_BEFORE = 365

FILE_LIST = "https://slack.com/api/files.list?token=%s" % TOKEN
FILE_DELETE = "https://slack.com/api/files.delete?token=%s" % TOKEN


def slack_request(url):
    r = requests.get(url)
    if r.status_code != 200:
        print "Error retrieving data"
        print "HTTP Error: %d" % r.status_code
        sys.exit(1)

    data = r.json()
    if not data['ok']:
        print "There's an error!"
        print data['error']
        sys.exit(1)

    return data


def main():
    """
    Retrieves all the files from Slack's api. It checks how many pages there
    are and will loop until it retrieves them all.  """

    files = []
    page = 1
    max_pages = 1

    while page <= max_pages:
        data = slack_request(FILE_LIST + "&page=%d" % page)

        max_pages = data['paging']['pages']

        files += data['files']

        page += 1

        # Tells you what page it just retrieved
        print data['paging']

    i = 0
    for f in files:
        # Don't delete files older than DAYS_BEFORE
        if f['timestamp'] > time.time() - (DAYS_BEFORE * 24 * 60 * 60):
            continue

        i += 1
        print "Deleting file: %d" % i

        slack_request(FILE_DELETE + "&file=%s" % f['id'])

if __name__ == "__main__":
    main()
